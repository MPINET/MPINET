name: Build Test

on:
  pull_request:
    branches: [ "master" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    
    - name: Configure GCC
      run: | 
           sudo add-apt-repository ppa:ubuntu-toolchain-r/test -y
           sudo apt update -y
           sudo apt upgrade -y
           sudo apt install gcc-13 g++-13 gdb cmake libsqlite3-dev libboost-dev openmpi-bin openmpi-common openmpi-doc libopenmpi-dev libeigen3-dev libxml2-dev python3 -y
           sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-13 13
           sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-13 13

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: |
           cd ${{github.workspace}}
           ./ns3 configure --enable-mpi
           cmake -DCMAKE_BUILD_TYPE=Debug -DNS3_MPI=ON -G 'CodeBlocks - Unix Makefiles' -S . -B ./build

    - name: Build
      # Build your program with the given configuration
      run: make
      working-directory: ${{github.workspace}}/build
